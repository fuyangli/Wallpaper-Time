<extra:Window
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                      xmlns:local="clr-namespace:WallpaperTime_"
                      xmlns:extra="http://schemas.extra.com/ui"
                      xmlns:metro="http://schemas.codeplex.com/elysium"
                      xmlns:res="clr-namespace:WallpaperTime_.Properties"
                      xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
                      xmlns:utils="clr-namespace:WallpaperTime_.Utils"
                      xmlns:mycontrols="clr-namespace:WallpaperTime_.Controls"
                      xmlns:controls="http://schemas.AvalonControls/AvalonControlsLibrary/Controls"
                      xmlns:Themes="clr-namespace:Xceed.Wpf.Toolkit.Themes;assembly=Xceed.Wpf.Toolkit" x:Class="WallpaperTime_.ConfigurationWindow"
                      mc:Ignorable="d"
                      Title="ConfigurationWindow"
                      WindowStartupLocation="CenterScreen"
                      BorderThickness="0"
                      Width="350"
                      MinWidth="350"
                      Height="415"
                      MinHeight="350"
                      ResizeMode="NoResize"
                      DataContext="{Binding RelativeSource={RelativeSource Self}}">
    <extra:Window.Resources>
        <utils:TimeSpanToDateTimeConverter x:Key="TimeSpanToDateTimeConverter" />
        <Style x:Key="TimePickerStyle" TargetType="{x:Type xctk:TimePicker}">
            <Style.Resources>
                <Style TargetType="{x:Type xctk:ButtonSpinner}" BasedOn="{StaticResource {x:Type xctk:ButtonSpinner}}">
                    <Setter Property="Background" Value="SeaGreen"/>
                </Style>
            </Style.Resources>
        </Style>
    </extra:Window.Resources>
    <DockPanel Margin="5">
        <StackPanel DockPanel.Dock="Top" Orientation="Vertical">
            <TextBlock><Run Text="{x:Static res:Resources.ImgPath}" /></TextBlock>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <TextBox x:Name="TextBoxImagePath" Grid.Column="0"
					Text="{Binding WallpaperTrigger.Path, Mode=TwoWay, UpdateSourceTrigger=Explicit, ValidatesOnExceptions=True}" />
                <Button Grid.Column="1" Content="..." Click="ButtonUrlPicker" MinWidth="10" />
            </Grid>
            <Image Stretch="Uniform" 
				Source="{Binding Text, ElementName=TextBoxImagePath, Mode=OneWay}"
				AllowDrop="True"
				Drop="ImageOnDrop"
				MaxHeight="190"
				RenderOptions.BitmapScalingMode="NearestNeighbor">
                <Image.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="Open Image Outside" Click="ButtonOpenImageClick" />
                        <MenuItem Header="Open Containing Folder" Click="ButtonOpenContainingFolder" />
                    </ContextMenu>
                </Image.ContextMenu>
            </Image>
            <TextBlock><Run Text="{x:Static res:Resources.Time}" /></TextBlock>
            <xctk:TimePicker x:Name="TimePicker"
				Value="{Binding WallpaperTrigger.Time, Mode=TwoWay, UpdateSourceTrigger=Explicit}"
				Height="30" Style="{DynamicResource TimePickerStyle}"/>
            <TextBlock><Run Text="{x:Static res:Resources.Style}" /></TextBlock>
            <ComboBox x:Name="ComboBoxStyle"
				SelectedValue="{Binding WallpaperTrigger.Style, Mode=TwoWay, UpdateSourceTrigger=Explicit, ValidatesOnExceptions=True}"
				IsReadOnly="True" HorizontalAlignment="Stretch"
				SelectedIndex="0" SelectedValuePath="Value">
                <mycontrols:ComboBoxItem Text="{x:Static res:Resources.Centered}"
					Value="{x:Static utils:Style.Centered}" />
                <mycontrols:ComboBoxItem Text="{x:Static res:Resources.CropToFit}"
					Value="{x:Static utils:Style.CropToFit}" />
                <mycontrols:ComboBoxItem Text="{x:Static res:Resources.KeepAspect}"
					Value="{x:Static utils:Style.KeepAspect}" />
                <mycontrols:ComboBoxItem Text="{x:Static res:Resources.Span}" Value="{x:Static utils:Style.Span}" />
                <mycontrols:ComboBoxItem Text="{x:Static res:Resources.Stretched}"
					Value="{x:Static utils:Style.Stretched}" />
                <mycontrols:ComboBoxItem Text="{x:Static res:Resources.Tiled}" Value="{x:Static utils:Style.Tiled}" />
            </ComboBox>

        </StackPanel>
        <Grid DockPanel.Dock="Bottom" VerticalAlignment="Bottom">
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Button Margin="5" VerticalAlignment="Bottom" VerticalContentAlignment="Bottom"
				Content="{x:Static res:Resources.Save}" Click="ButtonSaveOnClick" />
            <Button Grid.Column="1" Margin="5" VerticalAlignment="Bottom" VerticalContentAlignment="Bottom"
				Content="{x:Static res:Resources.Cancel}" IsCancel="True" />
        </Grid>
    </DockPanel>

</extra:Window>